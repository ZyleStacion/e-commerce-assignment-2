<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <!-- Bootstrap core CSS -->
    <link href="assets/css/bootstrap.css" rel="stylesheet">
    <style>
        .cart-container {
            width: 90%;
            margin: 0 auto;
            border: 1px solid #ddd;
            padding: 20px;
            background-color: #fff;
        }
        
        .cart-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .cart-header {
            background-color: #f8f9fa;
            font-weight: bold;
            border-bottom: 2px solid #ddd;
        }
        
        .cart-header th {
            padding: 15px 10px;
            text-align: center;
            border-right: 1px solid #ddd;
        }
        
        .cart-header th:last-child {
            border-right: none;
        }
        
        .cart-item {
            border-bottom: 1px solid #eee;
        }
        
        .cart-item:hover {
            background-color: #f8f9fa;
        }
        
        .cart-item td {
            padding: 15px 10px;
            text-align: center;
            vertical-align: middle;
            border-right: 1px solid #eee;
        }
        
        .cart-item td:last-child {
            border-right: none;
        }
        
        .item-checkbox {
            width: 50px;
        }
        
        .item-image {
            width: 120px;
        }
        
        .item-image img {
            max-width: 100px;
            height: auto;
            border-radius: 5px;
        }
        
        .item-description {
            width: 300px;
            text-align: left;
            padding-left: 15px;
        }
        
        .item-description p {
            margin: 5px 0;
        }
        
        .item-description strong {
            color: #333;
        }
        
        .item-price {
            width: 100px;
            font-weight: bold;
            color: #007bff;
        }
        
        .item-quantity {
            width: 100px;
        }
        
        .item-quantity input {
            width: 60px;
            padding: 5px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 3px;
        }
        
        .item-total {
            width: 120px;
            font-weight: bold;
            color: #28a745;
            font-size: 1.1em;
        }
        .update-btn, .remove-btn {
            background-color: black;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
        }

        .edit-buttons {
            padding-top: 20px;
        }

        .cart-total {
            background-color: #f8f9fa;
            border: 2px solid #28a745;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            text-align: right;
        }

        .cart-total h3 {
            margin: 0;
            color: #28a745;
            font-weight: bold;
            font-size: 1.5rem;
        }

        .cart-total .total-amount {
            font-size: 2rem;
            font-weight: bold;
            color: #28a745;
            margin-top: 10px;
        }

        .cart-total .subtotal {
            color: #6c757d;
            margin-bottom: 10px;
            font-size: 1.1rem;
        }

        .payment-methods {
            margin-top: 30px;
            text-align: left;
        }

        .payment-methods h2 {
            margin-bottom: 20px;
            color: #333;
        }

        #payment-logos {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 30px;
            margin: 20px 0;
            padding: 20px;
        }

        .payment-logo {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .payment-logo img {
            height: 60px;
        }

        /* Scale Google Pay logo to match PayPal visual size */
        .payment-logo img[alt="Google Pay Logo"] {
            height: 80px;
            transform: scale(1.2);
        }

        .checkout-now {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
        }

        .checkout-now:hover {
            background-color: #218838;
        }
    </style>
    <!-- Link custom JavaScript -->
    <script src="assets/js/cart.js"></script>
    </script>
</head>
<body>

<div class="cart-container">
    <h1>Shopping Cart</h1>
    
    <table class="cart-table">
        <thead>
            <tr class="cart-header">
                <th class="item-checkbox">Remove</th>
                <th class="item-image">Image</th>
                <th class="item-description">Product Description</th>
                <th class="item-price">Price</th>
                <th class="item-quantity">Qty</th>
                <th class="item-total">Total</th>
            </tr>
        </thead>
        <tbody>
            <!-- Render cart-items -->
            <% shoppingCart.forEach(item => { %>
                <tr class="cart-item">
                    <td class="item-checkbox">
                        <input type="checkbox" name="remove-item" value="<%= item.name %>">
                    </td>
                    <td class="item-image">
                        <img src="<%= item.img %>" alt="<%= item.name %> image">
                    </td>
                    <td class="item-description">
                        <p><strong><%= item.name %></strong></p>
                        <p><%= item.description %></p>
                        <p>Availability: <span style="color:green;">Online</span> <span style="color:blue;">Immediate Pick-up</span></p>
                    </td>
                    <td class="item-price">$<%= item.price %></td>
                    <td class="item-quantity">
                        <input type="number" id="<%= item.id %>-qty" value="<%= item.quantity %>" min="1" data-item="<%= item.name %>">
                    </td>
                    <td class="item-total">$<%= item.itemTotal.toFixed(2) %></td>
                </tr>
            <% }) %>
            
            <% if (shoppingCart.length == 0) { %>
                <tr>
                    <td colspan="6" style="text-align: center; padding: 30px;">
                        Your cart is empty! Click <a href="/">here</a> to purchase some items.
                    </td>
                </tr>
            <% } %>
        </tbody>
    </table>

    <!-- Grand Total Section -->
    <% if (shoppingCart.length > 0) { %>
        <% let grandTotal = 0; %>
        <% shoppingCart.forEach(item => { %>
            <% grandTotal += item.itemTotal; %>
        <% }) %>
        
        <div class="cart-total">
            <div class="subtotal">
                Subtotal: $<%= grandTotal.toFixed(2) %>
            </div>
            <div class="subtotal">
                Tax: $0.00
            </div>
            <div class="subtotal">
                Shipping: Free
            </div>
            <hr style="border-color: #28a745;">
            <h3>Grand Total: <span class="total-amount">$<%= grandTotal.toFixed(2) %></span></h3>
        </div>
    <% } %>

    <div class="edit-buttons">
        <button class="update-btn" onclick="updateQuantity()">UPDATE QTY</button>
        <button class="remove-btn" onclick="removeItems()">REMOVE</button>
    </div>

    <!-- Payment Methods -->
    <div class="payment-methods">
        <h2>Available payment options</h2>
        <div id="payment-logos">
            <!-- PayPal Logo -->
            <div class="payment-logo">
                <img src="https://www.paypalobjects.com/webstatic/mktg/logo/pp_cc_mark_37x23.jpg" 
                     height="60" alt="PayPal Logo">
            </div>
            <!-- Google Pay Mark -->
            <div class="payment-logo">
                <img src="assets/img/google-pay-mark_800.svg" 
                     height="60" alt="Google Pay Logo">
            </div>
            <!-- Mastercard -->
            <div class="payment-logo">
                <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Mastercard-logo.svg/64px-Mastercard-logo.svg.png" 
                     height="60" alt="Mastercard Logo">
            </div>
            <!-- Visa -->
            <div class="payment-logo">
                <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Visa_2021.svg/128px-Visa_2021.svg.png" 
                     height="60" alt="Visa Logo">
            </div>
            <!-- Apple Pay -->
            <div class="payment-logo">
                <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Apple_Pay_logo_2014.svg/128px-Apple_Pay_logo_2014.svg.png" 
                     height="60" alt="Apple Pay Logo">
            </div>
        </div>
        <button class="checkout-now" onclick="goToCheckout()">Checkout Now >>></button>
    </div>
</div>

<script>
    // Navigate to checkout page
    function goToCheckout() {
        // Redirect to checkout page (cart data is already stored on server)
        window.location.href = '/checkout';
    }
    // Get the quantity and change the items' info
    function updateQuantity() {
        // Fetch quantities
        const quantities = document.querySelectorAll('input[id$="-qty"]');

        // Store updated quantities
        const updatedQuantities = [];
        let newGrandTotal = 0;

        quantities.forEach(input => {
        const itemName = input.getAttribute('data-item');
        const itemQuantity = parseInt(input.value);

        // Update the table with the correct values
        const row = input.closest('tr');
        const priceCell = row.querySelector('.item-price');
        const priceText = priceCell.textContent.replace('$', '');
        const price = parseFloat(priceText);
        const newTotal = (price * itemQuantity).toFixed(2);
        const totalCell = row.querySelector('.item-total');
        totalCell.textContent = `$${newTotal}`;
        
        // Add to grand total
        newGrandTotal += parseFloat(newTotal);
            
        console.log(`${itemName}: ${itemQuantity} * $${price} = $${newTotal}`);

        updatedQuantities.push({
            name: itemName,
            quantity: itemQuantity
        });
        
        console.log(`${itemName}: ${input.value}`);
        });
        
        // Update grand total display
        updateGrandTotal(newGrandTotal);
    }
    
    // Function to update grand total display
    function updateGrandTotal(total) {
        const cartTotal = document.querySelector('.cart-total');
        if (cartTotal) {
            const subtotalElements = cartTotal.querySelectorAll('.subtotal');
            const totalAmountElement = cartTotal.querySelector('.total-amount');
            
            // Update subtotal (first element)
            if (subtotalElements[0]) {
                subtotalElements[0].textContent = `Subtotal: $${total.toFixed(2)}`;
            }
            
            // Update grand total
            if (totalAmountElement) {
                totalAmountElement.textContent = `$${total.toFixed(2)}`;
            }
        }
    }

    // Delete items that are selected
    function removeItems() {
        // Get all selected items
        const selectedItems = document.querySelectorAll('input[type="checkbox"][name="remove-item"]:checked')

        if (selectedItems.length === 0) {
            alert('No items selected');
            return;
        }

        // Get the item names
        const removedItems = [];
        selectedItems.forEach(checkbox => {
            removedItems.push(checkbox.value);
        })

        // Remove it from the table
        selectedItems.forEach(checkbox => {
            const row = checkbox.closest('tr');
            row.remove()
        })

        // Check if cart is empty by counting remaining cart-item rows
        const remainingItems = document.querySelectorAll('tr.cart-item');
        
        if (remainingItems.length === 0) {
            const tbody = document.querySelector('.cart-table tbody');
            tbody.innerHTML = `
                <tr>
                    <td colspan="6" style="text-align: center; padding: 30px;">
                        Your cart is empty! Click <a href="/">here</a> to purchase some items.
                    </td>
                </tr>
            `;
            
            // Hide grand total section when cart is empty
            const cartTotal = document.querySelector('.cart-total');
            if (cartTotal) {
                cartTotal.style.display = 'none';
            }
        } else {
            // Recalculate grand total after removal only if items remain
            recalculateGrandTotal();
        }
    }
    
    // Function to recalculate grand total from current table values
    function recalculateGrandTotal() {
        const totalCells = document.querySelectorAll('tr.cart-item .item-total');
        let newGrandTotal = 0;
        
        console.log('Recalculating grand total, found', totalCells.length, 'items');
        
        totalCells.forEach(cell => {
            const totalText = cell.textContent.replace('$', '').trim();
            const itemTotal = parseFloat(totalText) || 0;
            newGrandTotal += itemTotal;
            console.log('Item total:', totalText, 'Parsed:', itemTotal);
        });
        
        console.log('New grand total:', newGrandTotal);
        updateGrandTotal(newGrandTotal);
    }

</script>
</body>
</html>
