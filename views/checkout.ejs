<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <!-- Bootstrap core CSS -->
    <link href="assets/css/bootstrap.css" rel="stylesheet">
    
    <!-- PayPal SDK -->
    <script src="https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID&components=hosted-fields"></script>
    
    <style>
        .checkout-container {
            width: 90%;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
        }
        
        .checkout-header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #ddd;
        }
        
        .order-summary {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        
        .order-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
        }
        
        .order-item:last-child {
            border-bottom: none;
            font-weight: bold;
            font-size: 1.2em;
            color: #28a745;
        }
        
        .customer-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        
        .form-group input,
        .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 3px;
            font-size: 14px;
        }
        
        .payment-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        
        .place-order-btn {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 15px 50px;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            border-radius: 5px;
            width: 100%;
        }
        
        .place-order-btn:hover {
            background-color: #218838;
        }
        
        .back-to-cart {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 10px 20px;
            margin-right: 10px;
            border-radius: 3px;
            cursor: pointer;
        }
        
        .back-to-cart:hover {
            background-color: #5a6268;
        }

        /* PayPal Hosted Fields Styles */
        .hosted-field {
            height: 50px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 3px;
            font-size: 14px;
            margin-bottom: 15px;
        }

        .hosted-field.invalid {
            border-color: #dc3545;
        }

        .hosted-field.valid {
            border-color: #28a745;
        }

        .field-error {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
        }

        #paypal-button-container {
            margin-top: 20px;
        }
        
        .place-order-btn {
            margin-top: 6px;
        }
    </style>
</head>
<body>

<div class="checkout-container">
    <div class="checkout-header">
        <h1>Checkout</h1>
        <p>Review your order and complete your purchase</p>
    </div>

    <!-- Order Summary -->
    <div class="order-summary">
        <h3>Order Summary</h3>
        <% let total = 0; %>
        <% shoppingCart.forEach(item => { %>
            <% let itemTotal = item.quantity * parseFloat(item.price); %>
            <% total += itemTotal; %>
            <div class="order-item">
                <span><%= item.name %> (x<%= item.quantity %>)</span>
                <span>$<%= itemTotal.toFixed(2) %></span>
            </div>
        <% }) %>
        
        <% if (shoppingCart.length == 0) { %>
            <div class="order-item">
                <span>Your cart is empty</span>
                <span>$0.00</span>
            </div>
        <% } else { %>
            <div class="order-item">
                <span>Total</span>
                <span>$<%= total.toFixed(2) %></span>
            </div>
        <% } %>
    </div>

    <!-- Customer Information -->
    <h3>Customer Information</h3>
    <form id="checkout-form">
        <div class="customer-info">
            <div>
                <div class="form-group">
                    <label for="firstName">First Name *</label>
                    <input type="text" id="firstName" name="firstName" required>
                </div>
                <div class="form-group">
                    <label for="email">Email Address *</label>
                    <input type="email" id="email" name="email" required>
                </div>
                <div class="form-group">
                    <label for="address">Street Address *</label>
                    <input type="text" id="address" name="address" required>
                </div>
                <div class="form-group">
                    <label for="state">State *</label>
                    <input type="text" id="state" name="state" required>
                </div>
            </div>
            <div>
                <div class="form-group">
                    <label for="lastName">Last Name *</label>
                    <input type="text" id="lastName" name="lastName" required>
                </div>
                <div class="form-group">
                    <label for="phone">Phone Number</label>
                    <input type="tel" id="phone" name="phone">
                </div>
                <div class="form-group">
                    <label for="city">City *</label>
                    <input type="text" id="city" name="city" required>
                </div>
                <div class="form-group">
                    <label for="zipCode">ZIP Code *</label>
                    <input type="text" id="zipCode" name="zipCode" required>
                </div>
            </div>
        </div>

        <!-- Payment Information -->
        <div class="payment-section">
            <h3>Payment Information</h3>
            <div class="form-group">
                <label for="paymentMethod">Payment Method *</label>
                <select id="paymentMethod" name="paymentMethod" required>
                    <option value="">Select Payment Method</option>
                    <option value="credit-card">Credit Card</option>
                    <option value="paypal">PayPal</option>
                    <option value="google-pay">Google Pay</option>
                    <option value="apple-pay">Apple Pay</option>
                </select>
            </div>
            
            <div id="credit-card-fields" style="display: none;">
                <div class="customer-info">
                    <div>
                        <div class="form-group">
                            <label for="card-number">Card Number *</label>
                            <div id="card-number" class="hosted-field"></div>
                            <div id="card-number-error" class="field-error"></div>
                        </div>
                        <div class="form-group">
                            <label for="cardName">Name on Card *</label>
                            <input type="text" id="cardName" name="cardName" required>
                        </div>
                    </div>
                    <div>
                        <div class="form-group">
                            <label for="expiration-date">Expiry Date *</label>
                            <div id="expiration-date" class="hosted-field"></div>
                            <div id="expiration-date-error" class="field-error"></div>
                        </div>
                        <div class="form-group">
                            <label for="cvv">CVV *</label>
                            <div id="cvv" class="hosted-field"></div>
                            <div id="cvv-error" class="field-error"></div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- PayPal Button Container -->
            <div id="paypal-button-container" style="display: none;"></div>
        </div>

        <!-- Action Buttons -->
        <div style="text-align: center;">
            <button type="button" class="back-to-cart" onclick="goBackToCart()">‚Üê Back to Cart</button>
            <button type="submit" class="place-order-btn">Place Order</button>
        </div>
    </form>
</div>

<!-- Pass server data to JavaScript -->
<script type="application/json" id="cart-data">
<%- JSON.stringify({
    total: total || 0,
    items: shoppingCart || []
}) %>
</script>

<script>
    // Get cart data from server
    const cartData = JSON.parse(document.getElementById('cart-data').textContent);
    const CART_TOTAL = cartData.total;
    
    let hostedFieldsInstance;
    let paypalButtonsInstance;

    // Initialize PayPal SDK when page loads
    document.addEventListener('DOMContentLoaded', function() {
        initializePayPalHostedFields();
        initializePayPalButtons();
    });

    // Initialize PayPal Hosted Fields
    function initializePayPalHostedFields() {
        if (window.paypal && window.paypal.HostedFields && window.paypal.HostedFields.isEligible()) {
            window.paypal.HostedFields.render({
                createOrder: function() {
                    return fetch('/api/orders', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            // Add order data here
                            total: CART_TOTAL
                        })
                    }).then(function(res) {
                        return res.json();
                    }).then(function(orderData) {
                        return orderData.id;
                    });
                },
                
                styles: {
                    '.valid': {
                        'color': 'green'
                    },
                    '.invalid': {
                        'color': 'red'
                    }
                },
                
                fields: {
                    number: {
                        selector: '#card-number',
                        placeholder: '1234 5678 9012 3456'
                    },
                    cvv: {
                        selector: '#cvv',
                        placeholder: '123'
                    },
                    expirationDate: {
                        selector: '#expiration-date',
                        placeholder: 'MM/YY'
                    }
                }
                
            }).then(function(hostedFields) {
                hostedFieldsInstance = hostedFields;
                
                // Handle field validation
                hostedFields.on('validityChange', function(event) {
                    const field = event.fields[event.emittedBy];
                    const fieldElement = document.querySelector('#' + event.emittedBy);
                    const errorElement = document.querySelector('#' + event.emittedBy + '-error');
                    
                    if (field.isValid) {
                        fieldElement.classList.remove('invalid');
                        fieldElement.classList.add('valid');
                        errorElement.textContent = '';
                    } else {
                        fieldElement.classList.remove('valid');
                        fieldElement.classList.add('invalid');
                        errorElement.textContent = field.isPotentiallyValid ? '' : 'Invalid ' + event.emittedBy;
                    }
                });
                
            }).catch(function(err) {
                console.error('PayPal Hosted Fields error:', err);
            });
        } else {
            console.log('PayPal Hosted Fields not eligible');
        }
    }

    // Initialize PayPal Buttons
    function initializePayPalButtons() {
        if (window.paypal && window.paypal.Buttons) {
            paypalButtonsInstance = window.paypal.Buttons({
                createOrder: function(data, actions) {
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: CART_TOTAL.toFixed(2)
                            }
                        }]
                    });
                },
                
                onApprove: function(data, actions) {
                    return actions.order.capture().then(function(details) {
                        alert('Transaction completed by ' + details.payer.name.given_name);
                        window.location.href = '/';
                    });
                },
                
                onError: function(err) {
                    console.error('PayPal Buttons error:', err);
                    alert('Payment failed. Please try again.');
                }
                
            }).render('#paypal-button-container');
        }
    }

    // Calculate cart total
    function calculateCartTotal() {
        return CART_TOTAL;
    }

    // Show/hide payment fields based on payment method
    document.getElementById('paymentMethod').addEventListener('change', function() {
        const creditCardFields = document.getElementById('credit-card-fields');
        const paypalButtonContainer = document.getElementById('paypal-button-container');
        const placeOrderBtn = document.querySelector('.place-order-btn');
        
        // Hide all payment sections first
        creditCardFields.style.display = 'none';
        paypalButtonContainer.style.display = 'none';
        placeOrderBtn.style.display = 'block';
        
        if (this.value === 'credit-card') {
            creditCardFields.style.display = 'block';
        } else if (this.value === 'paypal') {
            paypalButtonContainer.style.display = 'block';
            placeOrderBtn.style.display = 'none'; // Hide place order button for PayPal
        }
    });

    // Handle form submission for credit card payments
    document.getElementById('checkout-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const paymentMethod = document.getElementById('paymentMethod').value;
        
        if (paymentMethod === 'credit-card' && hostedFieldsInstance) {
            // Submit hosted fields
            hostedFieldsInstance.submit().then(function(payload) {
                console.log('Payment successful:', payload);
                alert('Order placed successfully! Thank you for your purchase.');
                window.location.href = '/';
            }).catch(function(err) {
                console.error('Payment error:', err);
                alert('Payment failed. Please check your card details and try again.');
            });
        } else {
            // Handle other payment methods
            alert('Order placed successfully! Thank you for your purchase.');
            window.location.href = '/';
        }
    });

    // Go back to cart
    function goBackToCart() {
        window.location.href = '/cart';
    }
</script>

</body>
</html>
